(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const e of n)if(e.type==="childList")for(const c of e.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function s(n){const e={};return n.integrity&&(e.integrity=n.integrity),n.referrerPolicy&&(e.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?e.credentials="include":n.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function o(n){if(n.ep)return;n.ep=!0;const e=s(n);fetch(n.href,e)}})();const u=document.querySelector(".parallax"),h=u.getBoundingClientRect().height,p=document.querySelector(".long-description"),f=document.querySelector(".question"),g=document.querySelector(".main-title");g.animate([{opacity:0},{opacity:1}],{duration:2e3});window.addEventListener("scroll",()=>{const r=window.scrollY;r<=2*h&&(u.style.perspectiveOrigin="50% "+(50-1.1*r)+"%")});document.querySelectorAll("video").forEach(t=>{t.muted=!0;const s=t.play();s instanceof Promise&&s.then(o=>{new IntersectionObserver(e=>{e.forEach(c=>{c.intersectionRatio!==1&&!t.paused?t.pause():t.paused&&t.play()})},{threshold:.2}).observe(t)})});const a=new IntersectionObserver(r=>{r.forEach(t=>{t.intersectionRatio>0&&(b(t.target,t.target.querySelector("p")),a.unobserve(t.target))})},{threshold:.2});p.style="opacity: 0";a.observe(p);f.style="opacity: 0";a.observe(f);function b(r,t){const s=t.firstChild,o=n(w(s));r.innerHTML="",r.style="opacity: 1",r.append(o);function n(e){const c=new DocumentFragment,d=e.flatMap((m,y)=>{const i=document.createElement("span");return i.textContent=m,i.style.animation=`fade-in 0.8s ${.2*y}s forwards cubic-bezier(0.11, 0, 0.5, 0)`,[i,document.createTextNode(" ")]});return c.append(...d),c}}function w(r){if(r.nodeType!==3)throw new Error("Lines can only be extracted from text nodes.");r.textContent=l(r.textContent);const t=r.textContent,s=document.createRange();let o=[],n=[];for(let e=0;e<t.length;e++){s.setStart(r,0),s.setEnd(r,e+1);const c=s.getClientRects().length-1;o[c]||o.push(n=[]),n.push(t.charAt(e))}return o=o.map(e=>l(e.join(""))),o}function l(r){return r.trim().replace(/\s+/g," ")}
